# THIS FILE WAS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT.
#
# Generated on 2024-05-22T11:44:56Z by kres 04ecdaf-dirty.

name: integration-misc-cron
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
"on":
  schedule:
    - cron: 30 5 * * *
jobs:
  default:
    runs-on:
      - self-hosted
      - talos
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Unshallow
        run: |
          git fetch --prune --unshallow
      - name: Download artifacts
        if: github.event_name != 'schedule'
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: _out
      - name: Fix artifact permissions
        run: |
          xargs -a _out/executable-artifacts -I {} chmod +x {}
      - name: build
        if: github.event_name == 'schedule'
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          PLATFORM: linux/amd64,linux/arm64
          PUSH: "true"
        run: |
          make talosctl-linux-amd64 kernel sd-boot sd-stub initramfs installer imager talos _out/integration-test-linux-amd64
      - name: talosctl-cni-bundle
        if: github.event_name == 'schedule'
        run: |
          make talosctl-cni-bundle
      - name: iso
        if: github.event_name == 'schedule'
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
        run: |
          make iso secureboot-iso
      - name: images-essential
        if: github.event_name == 'schedule'
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          PLATFORM: linux/amd64,linux/arm64
        run: |
          make images-essential
      - name: e2e-firewall
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          WITH_FIREWALL: block
        run: |
          sudo -E make e2e-qemu
      - name: e2e-network-chaos
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          WITH_NETWORK_CHAOS: "yes"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-canal-reset
        env:
          CUSTOM_CNI_URL: https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/canal.yaml
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          INTEGRATION_TEST_RUN: TestIntegration/api.ResetSuite/TestResetWithSpec
        run: |
          sudo -E make e2e-qemu
      - name: e2e-bios-cgroupsv1
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          WITH_CONFIG_PATCH: '[{"op": "add", "path": "/machine/install/extraKernelArgs/-", "value": "talos.unified_cgroup_hierarchy=0"}]'
          WITH_UEFI: "false"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-disk-image
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          USE_DISK_IMAGE: "true"
          VIA_MAINTENANCE_MODE: "true"
          WITH_DISK_ENCRYPTION: "true"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-controlplane-port
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          WITH_CONTROL_PLANE_PORT: "443"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-no-cluster-discovery
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          WITH_CLUSTER_DISCOVERY: "false"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-kubespan
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io\
          SHORT_INTEGRATION_TEST: "yes"
          WITH_CLUSTER_DISCOVERY: "true"
          WITH_KUBESPAN: "true"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-default-hostname
        env:
          DISABLE_DHCP_HOSTNAME: "true"
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          VIA_MAINTENANCE_MODE: "true"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-siderolink
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          VIA_MAINTENANCE_MODE: "true"
          WITH_SIDEROLINK_AGENT: "true"
        run: |
          sudo -E make e2e-qemu
      - name: e2e-siderolink-tunnel
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          SHORT_INTEGRATION_TEST: "yes"
          VIA_MAINTENANCE_MODE: "true"
          WITH_SIDEROLINK_AGENT: tunnel
        run: |
          sudo -E make e2e-qemu
