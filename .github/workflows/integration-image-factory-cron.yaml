# THIS FILE WAS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT.
#
# Generated on 2024-05-23T10:20:45Z by kres 2688b70.

name: integration-image-factory-cron
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
"on":
  schedule:
    - cron: 30 6 * * *
jobs:
  default:
    runs-on:
      - self-hosted
      - talos
    steps:
      - name: gather-system-info
        id: system-info
        uses: kenchan0130/actions-system-info@v1.3.0
        continue-on-error: true
      - name: print-system-info
        run: |
          MEMORY_GB=$((${{ steps.system-info.outputs.totalmem }}/1024/1024/1024))

          OUTPUTS=(
            "CPU Core: ${{ steps.system-info.outputs.cpu-core }}"
            "CPU Model: ${{ steps.system-info.outputs.cpu-model }}"
            "Hostname: ${{ steps.system-info.outputs.hostname }}"
            "NodeName: ${NODE_NAME}"
            "Kernel release: ${{ steps.system-info.outputs.kernel-release }}"
            "Kernel version: ${{ steps.system-info.outputs.kernel-version }}"
            "Name: ${{ steps.system-info.outputs.name }}"
            "Platform: ${{ steps.system-info.outputs.platform }}"
            "Release: ${{ steps.system-info.outputs.release }}"
            "Total memory: ${MEMORY_GB} GB"
          )

          for OUTPUT in "${OUTPUTS[@]}";do
            echo "${OUTPUT}"
          done
        continue-on-error: true
      - name: checkout
        uses: actions/checkout@v4
      - name: Unshallow
        run: |
          git fetch --prune --unshallow
      - name: Download artifacts
        if: github.event_name != 'schedule'
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: _out
      - name: Fix artifact permissions
        if: github.event_name != 'schedule'
        run: |
          xargs -a _out/executable-artifacts -I {} chmod +x {}
      - name: build
        if: github.event_name == 'schedule'
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          PLATFORM: linux/amd64,linux/arm64
          PUSH: "true"
        run: |
          make talosctl-linux-amd64 kernel sd-boot sd-stub initramfs installer imager talos _out/integration-test-linux-amd64
      - name: talosctl-cni-bundle
        if: github.event_name == 'schedule'
        run: |
          make talosctl-cni-bundle
      - name: iso
        if: github.event_name == 'schedule'
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
        run: |
          make iso secureboot-iso
      - name: images-essential
        if: github.event_name == 'schedule'
        env:
          IMAGE_REGISTRY: registry.dev.siderolabs.io
          PLATFORM: linux/amd64,linux/arm64
        run: |
          make images-essential
      - name: factory-1.6-iso
        env:
          FACTORY_BOOT_METHOD: iso
          FACTORY_SCHEMATIC: 376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba
          FACTORY_UPGRADE: "true"
          FACTORY_UPGRADE_SCHEMATIC: cf9b7aab9ed7c365d5384509b4d31c02fdaa06d2b3ac6cc0bc806f28130eff1f
          FACTORY_UPGRADE_VERSION: v1.6.1
          FACTORY_VERSION: v1.6.0
          KUBERNETES_VERSION: 1.29.0
        run: |
          sudo -E make e2e-image-factory
      - name: factory-1.6-image
        env:
          FACTORY_BOOT_METHOD: disk-image
          FACTORY_SCHEMATIC: 376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba
          FACTORY_UPGRADE: "true"
          FACTORY_UPGRADE_SCHEMATIC: cf9b7aab9ed7c365d5384509b4d31c02fdaa06d2b3ac6cc0bc806f28130eff1f
          FACTORY_UPGRADE_VERSION: v1.6.1
          FACTORY_VERSION: v1.6.0
          KUBERNETES_VERSION: 1.29.0
        run: |
          sudo -E make e2e-image-factory
      - name: factory-1.6-pxe
        env:
          FACTORY_BOOT_METHOD: pxe
          FACTORY_SCHEMATIC: 376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba
          FACTORY_VERSION: v1.6.1
          KUBERNETES_VERSION: 1.29.0
        run: |
          sudo -E make e2e-image-factory
      - name: factory-1.6-secureboot
        env:
          FACTORY_BOOT_METHOD: secureboot-iso
          FACTORY_SCHEMATIC: cf9b7aab9ed7c365d5384509b4d31c02fdaa06d2b3ac6cc0bc806f28130eff1f
          FACTORY_UPGRADE: "true"
          FACTORY_UPGRADE_SCHEMATIC: 376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba
          FACTORY_UPGRADE_VERSION: v1.6.1
          FACTORY_VERSION: v1.6.0
          KUBERNETES_VERSION: 1.29.0
        run: |
          sudo -E make e2e-image-factory
      - name: factory-1.5-iso
        env:
          FACTORY_BOOT_METHOD: iso
          FACTORY_SCHEMATIC: 376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba
          FACTORY_UPGRADE: "true"
          FACTORY_UPGRADE_SCHEMATIC: cf9b7aab9ed7c365d5384509b4d31c02fdaa06d2b3ac6cc0bc806f28130eff1f
          FACTORY_UPGRADE_VERSION: v1.5.5
          FACTORY_VERSION: v1.5.5
          KUBERNETES_VERSION: 1.28.5
        run: |
          sudo -E make e2e-image-factory
      - name: factory-1.3-iso
        env:
          FACTORY_BOOT_METHOD: iso
          FACTORY_SCHEMATIC: 376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba
          FACTORY_UPGRADE: "true"
          FACTORY_UPGRADE_SCHEMATIC: cf9b7aab9ed7c365d5384509b4d31c02fdaa06d2b3ac6cc0bc806f28130eff1f
          FACTORY_UPGRADE_VERSION: v1.3.7
          FACTORY_VERSION: v1.3.7
          KUBERNETES_VERSION: 1.26.5
        run: |
          sudo -E make e2e-image-factory
      - name: factory-1.3-image
        env:
          FACTORY_BOOT_METHOD: disk-image
          FACTORY_SCHEMATIC: 376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba
          FACTORY_VERSION: v1.3.7
          KUBERNETES_VERSION: 1.26.5
        run: |
          sudo -E make e2e-image-factory
