# commit to be tagged for new release
commit = "HEAD"

project_name = "Talos"
github_repo = "siderolabs/talos"
match_deps = "^github.com/((talos-systems|siderolabs)/[a-zA-Z0-9-]+)$"

# previous release
previous = "v1.6.0"

pre_release = true

preface = """\
"""

[notes]
    [notes.updates]
        title = "Component Updates"
        description = """\
Linux: 6.6.14
etcd: 3.5.11
Kubernetes: 1.29.1
containerd: 1.7.13
runc: 1.1.12
Flannel: 0.24.1

Talos is built with Go 1.21.6.
"""

    [notes.device_selectors]
        title = "Device Selectors"
        description = """\
Talos Linux now supports `physical: true` qualifier for device selectors, it selects non-virtual network interfaces (i.e. `en0` is selected, while `bond0` is not).
"""

    [notes.problems]
        title = "Known Problems"
        description = """\
ZFS and DRBD extensions are disabled in this release due to incompatibility with the latest Linux kernel.
"""

    [notes.dns-resolve-cache]
        title = "DNS Caching"
        description = """\
Talos Linux now  provides a caching DNS resolver for host workloads (including host networking pods). It can be disabled with:

```yaml
machine:
   features:
       localDNS: false
```
"""

    [notes.secureboot-image]
        title = "Secure Boot Image"
        description = """\
Talos Linux now provides a way to configure systemd-boot ISO 'secure-boot-enroll' option while generating a SecureBoot ISO image:

```yaml
output:
    kind: iso
    isoOptions:
        sdBootEnrollKeys: force # default is still if-safe
    outFormat: raw
```
"""

    [notes.rsa-service-account]
        title = "Kubernetes API Server Service Account Key"
        description = """\
Talos Linux starting from this release uses RSA key for Kubernetes API Server Service Account instead of ECDSA key to provide better compatibility with external OpenID Connect implementations.
"""

    [notes.opennebula]
        title = "OpenNebula"
        description = """\
Talos Linux now supports OpenNebula platform.
"""

    [notes.extensions]
        title = "Extension Services Config"
        description = """\
Talos now supports supplying configuration files for extension services that can be mounted into the extension service container.
The extension service configuration is a separate config document. An example is shown below:

```yaml
---
apiVersion: v1alpha1
kind: ExtensionServicesConfig
config:
    - name: nut-client
      configFiles:
        - content: MONITOR ${upsmonHost} 1 remote pass password
          mountPath: /usr/local/etc/nut/upsmon.conf
```
"""

[make_deps]

    [make_deps.tools]
        variable = "TOOLS"
        repository = "github.com/siderolabs/tools"

    [make_deps.pkgs]
        variable = "PKGS"
        repository = "github.com/siderolabs/pkgs"

    [make_deps.extras]
        variable = "EXTRAS"
        repository = "github.com/siderolabs/extras"
