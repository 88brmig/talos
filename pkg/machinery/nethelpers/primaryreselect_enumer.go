// Code generated by "enumer -type=PrimaryReselect -linecomment -text"; DO NOT EDIT.

package nethelpers

import (
	"fmt"
	"strings"
)

const _PrimaryReselectName = "alwaysbetterfailure"

var _PrimaryReselectIndex = [...]uint8{0, 6, 12, 19}

const _PrimaryReselectLowerName = "alwaysbetterfailure"

func (i PrimaryReselect) String() string {
	if i >= PrimaryReselect(len(_PrimaryReselectIndex)-1) {
		return fmt.Sprintf("PrimaryReselect(%d)", i)
	}
	return _PrimaryReselectName[_PrimaryReselectIndex[i]:_PrimaryReselectIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _PrimaryReselectNoOp() {
	var x [1]struct{}
	_ = x[PrimaryReselectAlways-(0)]
	_ = x[PrimaryReselectBetter-(1)]
	_ = x[PrimaryReselectFailure-(2)]
}

var _PrimaryReselectValues = []PrimaryReselect{PrimaryReselectAlways, PrimaryReselectBetter, PrimaryReselectFailure}

var _PrimaryReselectNameToValueMap = map[string]PrimaryReselect{
	_PrimaryReselectName[0:6]:        PrimaryReselectAlways,
	_PrimaryReselectLowerName[0:6]:   PrimaryReselectAlways,
	_PrimaryReselectName[6:12]:       PrimaryReselectBetter,
	_PrimaryReselectLowerName[6:12]:  PrimaryReselectBetter,
	_PrimaryReselectName[12:19]:      PrimaryReselectFailure,
	_PrimaryReselectLowerName[12:19]: PrimaryReselectFailure,
}

var _PrimaryReselectNames = []string{
	_PrimaryReselectName[0:6],
	_PrimaryReselectName[6:12],
	_PrimaryReselectName[12:19],
}

// PrimaryReselectString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PrimaryReselectString(s string) (PrimaryReselect, error) {
	if val, ok := _PrimaryReselectNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _PrimaryReselectNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PrimaryReselect values", s)
}

// PrimaryReselectValues returns all values of the enum
func PrimaryReselectValues() []PrimaryReselect {
	return _PrimaryReselectValues
}

// PrimaryReselectStrings returns a slice of all String values of the enum
func PrimaryReselectStrings() []string {
	strs := make([]string, len(_PrimaryReselectNames))
	copy(strs, _PrimaryReselectNames)
	return strs
}

// IsAPrimaryReselect returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PrimaryReselect) IsAPrimaryReselect() bool {
	for _, v := range _PrimaryReselectValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalText implements the encoding.TextMarshaler interface for PrimaryReselect
func (i PrimaryReselect) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for PrimaryReselect
func (i *PrimaryReselect) UnmarshalText(text []byte) error {
	var err error
	*i, err = PrimaryReselectString(string(text))
	return err
}
